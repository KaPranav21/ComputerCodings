import java.util.Scanner;

public class Solution {

    public static String getSmallestAndLargest(String s, int k) {
        String smallest = s.substring(0,k);
        String largest = s.substring(0,k);
        if ( s.length() > k ) {
            for (int i = 0; i < s.length() - k + 1; i++) {
                if (s.substring(i, i + k).compareTo(smallest) < 0) {
                    smallest = s.substring(i, i + k);
            }
                else if (s.substring(i, i + k).compareTo(largest) > 0) {
                 largest = s.substring(i, i + k);
            }
         }
     }          else {
         smallest = s.substring(0,s.length());
         largest = smallest;
     }
    return smallest + "\n" + largest;
}


    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String s = scan.next();
        int k = scan.nextInt();
        scan.close();
      
        System.out.println(getSmallestAndLargest(s, k));
    }
}

/*
Output Format

Return the respective lexicographically smallest and largest substrings as a single newline-separated string.

Sample Input 0

welcometojava
3
Sample Output 0

ava
wel
Explanation 0

String  has the following lexicographically-ordered substrings of length :

We then return the first (lexicographically smallest) substring and the last (lexicographically largest) substring as two newline-separated values (i.e., ava\nwel).

The stub code in the editor then prints ava as our first line of output and wel as our second line of output.
*/
