import java.util.Stack;
import java.util.Scanner;

public class JavaStack {
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
            while (sc.hasNext()) {
                String bracket=sc.next();
                    Stack<Character> stack = new Stack<>();
     for (int i = 0; i < bracket.length(); i++) {
        if (!stack.isEmpty()) {
            switch(bracket.charAt(i)) {
                case '}' : if (stack.peek() == '{') {
                    stack.pop();
                } break;
                case ']' : if (stack.peek() == '[') {
                    stack.pop();
                } break;
                case ')' : if (stack.peek() == '(') {
                    stack.pop();
                } break;
                default: stack.push(bracket.charAt(i));
          }
        } else {
            stack.push(bracket.charAt(i));
        } 
     }
     System.out.println(stack.isEmpty());
        }   
    }
}

/*
Input Format

There will be multiple lines in the input file, each having a single non-empty string. You should read input till end-of-file.

The part of the code that handles input operation is already provided in the editor.

Output Format

For each case, print 'true' if the string is balanced, 'false' otherwise.

Sample Input

{}()
({()})
{}(
[]
Sample Output

true
true
false
true
*/
